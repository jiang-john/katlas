sudo: true
go_import_path: github.com/intuit/katlas

dist: xenial
language: go

go:
  - 1.11.x

services:
  - docker

install:
  - cd $TRAVIS_BUILD_DIR/service && make all
  #- cd $TRAVIS_BUILD_DIR/app && yarn install

before_script:
  - hostname
  - hostname -i | awk '{print $1}'
  - hostname -I | awk '{print $1}'
  - export HOST_IP="$(hostname -i | awk '{print $1})'
  - echo $HOST_IP
  # Configure the Linux kernel to allow IP forwarding
  #- sudo sysctl net.ipv4.conf.all.forwarding=1
  # Change the policy for the iptables FORWARD policy from DROP to ACCEPT
  #- sudo iptables -P FORWARD ACCEPT
  - docker pull dgraph/dgraph:v1.0.12-rc2
  - mkdir -p /tmp/data
  #- docker run -d -it -p 5080:5080 -p 6080:6080 -p 8080:8080 -p 9080:9080 -p 8000:8000 -v /tmp/data:/dgraph --name diggy dgraph/dgraph dgraph zero
  #- docker run -d -it -p 127.0.0.1:5080:5080 -p 127.0.0.1:6080:6080 -p 127.0.0.1:8080:8080 -p 127.0.0.1:9080:9080 -p 127.0.0.1:8000:8000 -v /tmp/data:/dgraph --name diggy dgraph/dgraph dgraph zero
  #- docker run -d -it -v /tmp/data:/dgraph --name diggy dgraph/dgraph dgraph zero
  #- docker run --network host -d -it -v /tmp/data:/dgraph --name diggy dgraph/dgraph dgraph zero
  #- docker network create my-net
  #- docker network create katlas
  #- docker run --network my-net -d -it -p 5080:5080 -p 6080:6080 -p 8080:8080 -p 9080:9080 -p 8000:8000 -v /tmp/data:/dgraph --name diggy dgraph/dgraph dgraph zero
  - docker run -d -it -p 5080:5080 -p 6080:6080 -p 8080:8080 -p 9080:9080 -p 8000:8000 -p 7080:7080 -v /tmp/data:/dgraph --name diggy dgraph/dgraph dgraph zero
  - docker exec -d -it diggy dgraph alpha --lru_mb 2048 --zero localhost:5080
  - sleep 5s
  #- docker network connect katlas  diggy
  #- docker version
  - TRAVIS_COMMIT_SHORTID="${TRAVIS_COMMIT:0:7}"
  - echo "${TRAVIS_COMMIT_SHORTID}"
  #- export HOST_IP_ADDRESS="$(/sbin/ip route|awk '/default/ { print $3 }')"
  #- echo $HOST_IP_ADDRESS

script:
  - cd $TRAVIS_BUILD_DIR/service
  ##- go test -v ./... -coverprofile=coverage.txt -covermode=atomic
  #- docker build --no-cache -f Dockerfile -t katlas-service:${TRAVIS_COMMIT_SHORTID} .
  - docker build --no-cache -f Dockerfile -t xjiang1/katlas-service:${TRAVIS_COMMIT_SHORTID} .
  - docker images xjiang1/katlas-service:${TRAVIS_COMMIT_SHORTID}
  #- cd $TRAVIS_BUILD_DIR/app
  #- yarn test --coverage
  #- docker build --no-cache -f Dockerfile -t katlas-browser:${TRAVIS_COMMIT_SHORTID} .
  #- docker images katlas-browser:${TRAVIS_COMMIT_SHORTID}

after_success:
  #- cd $TRAVIS_BUILD_DIR/service
  #- bash <(curl -s https://codecov.io/bash)
  #- cd $TRAVIS_BUILD_DIR/app
  #- bash <(curl -s https://codecov.io/bash) -f coverage/coverage-final.json
  #- cd $TRAVIS_BUILD_DIR/service
  #- go run server.go 2> output.out &
  #- sleep 20s
  #- docker logs diggy
  ##- export ENV_NAMESPACE=localhost
  ##- export SERVER_TYPE=http
  ##- echo $DGRAPH_HOST
  #- ifconfig -a
  #- ifconfig docker0
  #- ifconfig docker0|grep inet
  #- ifconfig docker0|grep inet |awk -F":| "
  #- ifconfig docker0|grep inet |awk -F":| " '{print $3}'
  
  #- curl http://172.17.0.1:8080/health
  - curl http://127.0.0.1:8080/health
  #- curl localhost:8080/query -XPOST -d $‘{ me(func: has(starring)) {name}}’

  #not working- curl http://10.30.0.20:8080/health
  #- cat /etc/hosts
  #- docker run -d -it -p 127.0.0.1:8011:8011 -e ENV_NAMESPACE=qal -e SERVER_TYPE=http -e DGRAPH_HOST=127.0.0.1:9080 --name katlas-service katlas-service:${TRAVIS_COMMIT}
  #- docker run -d -it -p 8011:8011 -e ENV_NAMESPACE=qal -e SERVER_TYPE=http -e DGRAPH_HOST=127.0.0.1:9080 --name katlas-service katlas-service:${TRAVIS_COMMIT}
  #- docker run -d -it -p 8011:8011 -e ENV_NAMESPACE=qal -e SERVER_TYPE=http -e DGRAPH_HOST=host.docker.internal:9080 --name katlas-service katlas-service:${TRAVIS_COMMIT}
  #- docker run -d -it -p 8011:8011 -e ENV_NAMESPACE=qal -e SERVER_TYPE=http -e DGRAPH_HOST=172.17.0.2:9080 --name katlas-service katlas-service:${TRAVIS_COMMIT}
  #- docker run --network host -d -it -p 8011:8011 -e ENV_NAMESPACE=qal -e SERVER_TYPE=http -e DGRAPH_HOST=localhost:9080 --name katlas-service katlas-service:${TRAVIS_COMMIT}
  #- docker run --network bridge -d -it -e ENV_NAMESPACE=qal -e SERVER_TYPE=http -e DGRAPH_HOST=172.17.0.2:9080 --name katlas-service katlas-service:${TRAVIS_COMMIT}
  #- docker run -d -it -p 8011:8011 -e ENV_NAMESPACE=qal -e SERVER_TYPE=http -e DGRAPH_HOST=172.17.0.1:9080 --name katlas-service xjiang1/katlas-service:${TRAVIS_COMMIT_SHORTID}
  - docker run -d -it -p 8011:8011 -e ENV_NAMESPACE=qal -e SERVER_TYPE=http -e DGRAPH_HOST=$HOST_IP:9080 --name katlas-service xjiang1/katlas-service:${TRAVIS_COMMIT_SHORTID}
  #- docker run -d -it -p 8011:8011 --expose=9080 -e ENV_NAMESPACE=qal -e SERVER_TYPE=http -e DGRAPH_HOST=172.17.0.1:9080 --name katlas-service xjiang1/katlas-service:${TRAVIS_COMMIT_SHORTID}
  #- docker run -d -it -p 8011:8011 --expose=9080 -e ENV_NAMESPACE=qal -e SERVER_TYPE=http -e DGRAPH_HOST=$HOST_IP_ADDRESS:9080 --name katlas-service xjiang1/katlas-service:${TRAVIS_COMMIT_SHORTID}
  ##- docker network connect katlas  katlas-service
  # not working- docker run -d -it -p 8011:8011 -e ENV_NAMESPACE=qal -e SERVER_TYPE=http -e DGRAPH_HOST=10.30.0.20:9080 --name katlas-service xjiang1/katlas-service:${TRAVIS_COMMIT_SHORTID}
  #- sleep 3s
  #- docker container ls
  #- docker attach diggy
  #- ip addr show
  #- ping -c 2 google.com
  #- ping -c 2 172.18.0.3
  #- ping -c 2 katlas-service
  #- docker attach --sig-proxy=false diggy
  #- docker attach katlas-service
  #- ip addr show
  #- ping -c 2 google.com
  #- ping -c 2 172.18.0.2
  #- ping -c 2 diggy
  #- docker attach --sig-proxy=false katlas-service
  #- docker network ls
  #- docker network inspect my-net
  #- docker network inspect host
  #- docker network inspect bridge
  #- ip addr show
  #- sudo netstat -tulpn | grep :8011
  - sleep 10s
  - ifconfig -a
  - docker ps -a
  ##- cat ./output.out
  #- sleep 2s
  #- lsof -i :8011
  - sleep 2s
  - curl -sw '%{http_code}\n' http://127.0.0.1:8080/health
  # Check service health
  - curl -sw '%{http_code}\n' http://127.0.0.1:8011
  #- curl -sw '%{http_code}\n' http://localhost:8011
  # Check connecting dgraph db
  #- curl -sw '%{http_code}\n' http://localhost:8011/v1/query?name=pod
  - sleep 2s
  #- curl -sw '%{http_code}\n' http://host.docker.internal:8011/v1/query?name=pod
  - statusCode=$(curl -sw '%{http_code}\n' http://127.0.0.1:8011/v1/query?name=pod)
  - sleep 1s
  - statusCode=$(curl -sw '%{http_code}\n' http://$HOST_IP:8011/v1/query?name=pod)
  #- statusCode=$(curl -sw '%{http_code}\n' http://localhost:8011/v1/query?name=pod -o /dev/null)
  - statusCode=$(curl -sw '%{http_code}\n' http://localhost:8011/v1/query?name=pod)
  - curl http://localhost:8011/v1/query?name=pod
  ##- sleep 2s
  - echo $statusCode
  - |
    if [ $statusCode -ne "200" ]; then
        echo "Integration Test - Fail!";
    else
    	  echo "Integration Test - Success!";
    fi

  # Login to docker hub
  ##- echo "$DOCKER_PASSWORD" |docker login -u $DOCKER_USERNAME --password-stdin
  #- echo "$DOCKER_PASSWORD" |docker login -u $DOCKER_USERNAME --password-stdin >/dev/null 2>&1
  # Push image to docker hub: xjiang1/katlas-service:${TRAVIS_COMMIT_SHORTID}
  ##- docker push $DOCKER_USERNAME/katlas-service:${TRAVIS_COMMIT_SHORTID}

